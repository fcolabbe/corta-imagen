#!/bin/bash

# Script para actualizar la API en producci√≥n con URLs p√∫blicas
# Uso: ./update_production.sh

echo "üöÄ Actualizando API de Instagram Image Cropper en producci√≥n..."

# Configuraci√≥n
SERVER="thumbnail.shortenqr.com"
API_DIR="/var/www/instagram-cropper"
SERVICE_NAME="instagram-cropper-api"

echo "üì° Conectando al servidor de producci√≥n..."

# Crear directorio si no existe
ssh root@$SERVER "mkdir -p $API_DIR"

# Copiar archivos actualizados
echo "üìÅ Copiando archivos actualizados..."
scp api.py root@$SERVER:$API_DIR/
scp requirements.txt root@$SERVER:$API_DIR/
scp Dockerfile root@$SERVER:$API_DIR/
scp docker-compose.yml root@$SERVER:$API_DIR/
scp nginx.conf root@$SERVER:$API_DIR/

# Reiniciar servicios en producci√≥n
echo "üîÑ Reiniciando servicios..."
ssh root@$SERVER << 'EOF'
cd /var/www/instagram-cropper

# Detener servicios actuales
docker-compose down

# Reconstruir y levantar servicios
docker-compose up --build -d

# Verificar que los servicios est√©n funcionando
sleep 5
docker-compose ps

# Verificar logs
echo "üìã √öltimos logs del servicio:"
docker-compose logs --tail=20 api
EOF

echo "‚úÖ Actualizaci√≥n completada!"
echo ""
echo "üåê URLs disponibles:"
echo "   ‚Ä¢ API Principal: http://thumbnail.shortenqr.com:8088/"
echo "   ‚Ä¢ Documentaci√≥n: http://thumbnail.shortenqr.com:8088/docs"
echo "   ‚Ä¢ Health Check: http://thumbnail.shortenqr.com:8088/health"
echo ""
echo "üì± Nuevas funcionalidades:"
echo "   ‚Ä¢ download_url: Enlace para descargar imagen"
echo "   ‚Ä¢ view_url: Enlace para ver imagen en navegador"
echo ""
echo "üß™ Prueba la nueva funcionalidad:"
echo "curl -X POST 'http://thumbnail.shortenqr.com:8088/analyze-url' \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{\"url\": \"https://ejemplo.com/imagen.jpg\", \"api_key\": \"TU_API_KEY\"}'"
